
import React, { useState, useEffect } from 'react';
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Trophy, AlertTriangle, CheckCircle, FileText, Download } from "lucide-react";

interface AnalysisStepProps {
  onComplete: () => void;
  onPrevious: () => void;
}

export const AnalysisStep = ({ onComplete, onPrevious }: AnalysisStepProps) => {
  const [analysisResults, setAnalysisResults] = useState<any>(null);

  useEffect(() => {
    // Get analysis results from previous step
    const storedResults = sessionStorage.getItem('onboarding_analysis');
    if (storedResults) {
      setAnalysisResults(JSON.parse(storedResults));
    } else {
      // Fallback demo results
      setAnalysisResults({
        summary: {
          totalClauses: 8,
          criticalFindings: 2,
          complianceScore: 85
        },
        findings: [
          {
            clause: "FAR 52.219-14",
            title: "Limitations on Subcontracting",
            severity: "high",
            description: "Review subcontracting limitations for small business compliance"
          },
          {
            clause: "FAR 52.225-1",
            title: "Buy American Act",
            severity: "medium",
            description: "Verify domestic sourcing requirements"
          }
        ]
      });
    }
  }, []);

  const generateReport = () => {
    // Simulate report generation
    const reportContent = `COMPLIANCE ANALYSIS REPORT
Generated: ${new Date().toLocaleDateString()}

EXECUTIVE SUMMARY:
- Total FAR Clauses Identified: ${analysisResults?.summary?.totalClauses || 8}
- Critical Findings: ${analysisResults?.summary?.criticalFindings || 2}
- Compliance Score: ${analysisResults?.summary?.complianceScore || 85}%

DETAILED FINDINGS:
${analysisResults?.findings?.map((finding: any, index: number) => `
${index + 1}. ${finding.clause} - ${finding.title}
   Severity: ${finding.severity.toUpperCase()}
   Description: ${finding.description}
`).join('') || 'Analysis complete'}

This report was generated by Far V.02 AI Analysis Engine.`;

    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'far-compliance-report.txt';
    a.click();
    URL.revokeObjectURL(url);
  };

  return (
    <div className="text-center space-y-6">
      <div className="flex justify-center mb-6">
        <div className="w-20 h-20 bg-yellow-100 rounded-full flex items-center justify-center">
          <Trophy className="h-10 w-10 text-yellow-600" />
        </div>
      </div>

      <div>
        <h3 className="text-3xl font-bold text-gray-900 mb-2">
          ðŸŽ‰ Your First Analysis is Complete!
        </h3>
        <p className="text-lg text-gray-600">
          Here's what we found in your document
        </p>
      </div>

      <div className="max-w-3xl mx-auto">
        {/* Analysis Summary */}
        <div className="grid md:grid-cols-3 gap-4 mb-8">
          <Card>
            <CardContent className="p-4 text-center">
              <div className="text-2xl font-bold text-blue-600 mb-2">
                {analysisResults?.summary?.totalClauses || 8}
              </div>
              <div className="text-sm text-gray-600">FAR Clauses Found</div>
            </CardContent>
          </Card>

          <Card>
            <CardContent className="p-4 text-center">
              <div className="text-2xl font-bold text-orange-600 mb-2">
                {analysisResults?.summary?.criticalFindings || 2}
              </div>
              <div className="text-sm text-gray-600">Critical Findings</div>
            </CardContent>
          </Card>

          <Card>
            <CardContent className="p-4 text-center">
              <div className="text-2xl font-bold text-green-600 mb-2">
                {analysisResults?.summary?.complianceScore || 85}%
              </div>
              <div className="text-sm text-gray-600">Compliance Score</div>
            </CardContent>
          </Card>
        </div>

        {/* Key Findings */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle className="flex items-center space-x-2">
              <AlertTriangle className="h-5 w-5 text-orange-600" />
              <span>Key Findings</span>
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {analysisResults?.findings?.map((finding: any, index: number) => (
                <div key={index} className="flex items-start space-x-3 p-3 bg-gray-50 rounded-lg">
                  <div className={`w-2 h-2 rounded-full mt-2 ${
                    finding.severity === 'high' ? 'bg-red-500' : 
                    finding.severity === 'medium' ? 'bg-yellow-500' : 'bg-green-500'
                  }`}></div>
                  <div className="flex-1">
                    <div className="flex items-center space-x-2 mb-1">
                      <span className="font-semibold">{finding.clause}</span>
                      <Badge variant={finding.severity === 'high' ? 'destructive' : 'secondary'}>
                        {finding.severity}
                      </Badge>
                    </div>
                    <div className="font-medium text-gray-900 mb-1">{finding.title}</div>
                    <div className="text-sm text-gray-600">{finding.description}</div>
                  </div>
                </div>
              )) || (
                <div className="text-center text-gray-500 py-8">
                  <FileText className="h-12 w-12 mx-auto mb-4 text-gray-400" />
                  <p>Analysis results will appear here after document upload</p>
                </div>
              )}
            </div>
          </CardContent>
        </Card>

        {/* Success Message */}
        <div className="bg-green-50 border border-green-200 rounded-lg p-6 mb-8">
          <div className="flex items-center space-x-3 mb-4">
            <div className="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
              <CheckCircle className="h-4 w-4 text-green-600" />
            </div>
            <div>
              <h4 className="font-semibold text-green-800">Congratulations!</h4>
              <p className="text-sm text-green-600">
                You've successfully completed your first FAR compliance analysis
              </p>
            </div>
          </div>
          
          <div className="space-y-3">
            <Button
              variant="outline"
              onClick={generateReport}
              className="w-full"
            >
              <Download className="h-4 w-4 mr-2" />
              Download Your First Report
            </Button>
          </div>
        </div>

        {/* Next Steps */}
        <div className="text-left mb-8">
          <h4 className="font-semibold mb-4">What's Next?</h4>
          <ul className="space-y-2 text-sm text-gray-600">
            <li className="flex items-center space-x-2">
              <CheckCircle className="h-4 w-4 text-green-600" />
              <span>Upload more documents to build your compliance library</span>
            </li>
            <li className="flex items-center space-x-2">
              <CheckCircle className="h-4 w-4 text-green-600" />
              <span>Set up automated monitoring for new contracts</span>
            </li>
            <li className="flex items-center space-x-2">
              <CheckCircle className="h-4 w-4 text-green-600" />
              <span>Generate detailed compliance reports for stakeholders</span>
            </li>
          </ul>
        </div>

        <Button size="lg" onClick={onComplete} className="bg-green-600 hover:bg-green-700">
          Complete Setup
        </Button>
      </div>
    </div>
  );
};
